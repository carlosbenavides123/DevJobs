// Code generated by protoc-gen-go. DO NOT EDIT.
// source: jobpb/job.proto

package jobpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Job struct {
	JobUUID              string   `protobuf:"bytes,1,opt,name=JobUUID,proto3" json:"JobUUID,omitempty"`
	CompanyUUID          string   `protobuf:"bytes,2,opt,name=CompanyUUID,proto3" json:"CompanyUUID,omitempty"`
	JobLink              string   `protobuf:"bytes,3,opt,name=JobLink,proto3" json:"JobLink,omitempty"`
	DefaultLink          string   `protobuf:"bytes,4,opt,name=DefaultLink,proto3" json:"DefaultLink,omitempty"`
	ProvidedID           string   `protobuf:"bytes,5,opt,name=ProvidedID,proto3" json:"ProvidedID,omitempty"`
	CompanyName          string   `protobuf:"bytes,6,opt,name=CompanyName,proto3" json:"CompanyName,omitempty"`
	Location             string   `protobuf:"bytes,7,opt,name=Location,proto3" json:"Location,omitempty"`
	ExperienceLevel      int64    `protobuf:"varint,8,opt,name=ExperienceLevel,proto3" json:"ExperienceLevel,omitempty"`
	Active               bool     `protobuf:"varint,9,opt,name=Active,proto3" json:"Active,omitempty"`
	JobPosted            int64    `protobuf:"varint,10,opt,name=JobPosted,proto3" json:"JobPosted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_135a50213324ea52, []int{0}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetJobUUID() string {
	if m != nil {
		return m.JobUUID
	}
	return ""
}

func (m *Job) GetCompanyUUID() string {
	if m != nil {
		return m.CompanyUUID
	}
	return ""
}

func (m *Job) GetJobLink() string {
	if m != nil {
		return m.JobLink
	}
	return ""
}

func (m *Job) GetDefaultLink() string {
	if m != nil {
		return m.DefaultLink
	}
	return ""
}

func (m *Job) GetProvidedID() string {
	if m != nil {
		return m.ProvidedID
	}
	return ""
}

func (m *Job) GetCompanyName() string {
	if m != nil {
		return m.CompanyName
	}
	return ""
}

func (m *Job) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Job) GetExperienceLevel() int64 {
	if m != nil {
		return m.ExperienceLevel
	}
	return 0
}

func (m *Job) GetActive() bool {
	if m != nil {
		return m.Active
	}
	return false
}

func (m *Job) GetJobPosted() int64 {
	if m != nil {
		return m.JobPosted
	}
	return 0
}

func init() {
	proto.RegisterType((*Job)(nil), "main.Job")
}

func init() {
	proto.RegisterFile("jobpb/job.proto", fileDescriptor_135a50213324ea52)
}

var fileDescriptor_135a50213324ea52 = []byte{
	// 242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x49, 0xd3, 0xe6, 0xcf, 0x78, 0x28, 0xec, 0x41, 0x06, 0x11, 0x09, 0x9e, 0x72, 0xd2,
	0x83, 0x4f, 0xa0, 0xc6, 0x43, 0x43, 0x90, 0x12, 0xe8, 0xc5, 0xdb, 0x6e, 0x32, 0xc2, 0xd6, 0x66,
	0x27, 0xc4, 0x35, 0xe8, 0xb3, 0xf9, 0x72, 0x92, 0xb5, 0xc6, 0xd5, 0xe3, 0xf7, 0xfb, 0xe6, 0xc7,
	0xc0, 0x07, 0xeb, 0x3d, 0xab, 0x5e, 0x5d, 0xef, 0x59, 0x5d, 0xf5, 0x03, 0x5b, 0x16, 0xcb, 0x4e,
	0x6a, 0x73, 0xf9, 0xb9, 0x80, 0xb0, 0x64, 0x25, 0x10, 0xe2, 0x92, 0xd5, 0x6e, 0xb7, 0x29, 0x30,
	0xc8, 0x82, 0x3c, 0xad, 0x7f, 0xa2, 0xc8, 0xe0, 0xe4, 0x9e, 0xbb, 0x5e, 0x9a, 0x0f, 0xd7, 0x2e,
	0x5c, 0xeb, 0xa3, 0xa3, 0x5b, 0x69, 0xf3, 0x82, 0xe1, 0xec, 0x4e, 0x71, 0x72, 0x0b, 0x7a, 0x96,
	0x6f, 0x07, 0xeb, 0xda, 0xe5, 0xb7, 0xeb, 0x21, 0x71, 0x01, 0xb0, 0x1d, 0x78, 0xd4, 0x2d, 0xb5,
	0x9b, 0x02, 0x57, 0xee, 0xc0, 0x23, 0xde, 0xf7, 0x47, 0xd9, 0x11, 0x46, 0x7f, 0xbe, 0x4f, 0x48,
	0x9c, 0x41, 0x52, 0x71, 0x23, 0xad, 0x66, 0x83, 0xb1, 0xab, 0xe7, 0x2c, 0x72, 0x58, 0x3f, 0xbc,
	0xf7, 0x34, 0x68, 0x32, 0x0d, 0x55, 0x34, 0xd2, 0x01, 0x93, 0x2c, 0xc8, 0xc3, 0xfa, 0x3f, 0x16,
	0xa7, 0x10, 0xdd, 0x36, 0x56, 0x8f, 0x84, 0x69, 0x16, 0xe4, 0x49, 0x7d, 0x4c, 0xe2, 0x1c, 0xd2,
	0x92, 0xd5, 0x96, 0x5f, 0x2d, 0xb5, 0x08, 0xce, 0xfd, 0x05, 0x77, 0xf1, 0xd3, 0xca, 0xcd, 0xaa,
	0x22, 0xb7, 0xe9, 0xcd, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x7e, 0xec, 0x3a, 0x3f, 0x66, 0x01,
	0x00, 0x00,
}
